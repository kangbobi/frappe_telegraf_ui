name: CI

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    name: Tests & Code Quality

    services:
      mariadb:
        image: mariadb:10.6
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_CHARACTER_SET_SERVER: utf8mb4
          MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Clone
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Add to Hosts
        run: echo "127.0.0.1 test_site" | sudo tee -a /etc/hosts

      # Install app dependencies first
      - name: Install App Dependencies
        run: |
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          fi

      # Code Quality Steps
      - name: Install linting tools
        run: |
          pip install flake8 black isort

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Check formatting with black
        run: |
          black --check . || echo "Code formatting issues found"

      - name: Check imports with isort
        run: |
          isort --check-only . || echo "Import sorting issues found"

      # Frappe Setup Steps
      - name: Setup Bench
        run: |
          pip install frappe-bench
          bench init --skip-redis-config-generation --skip-assets --python "$(which python)" ~/frappe-bench

      - name: Configure Database
        run: |
          mysql --host 127.0.0.1 --port 3306 -u root -proot -e "SET GLOBAL character_set_server = 'utf8mb4'"
          mysql --host 127.0.0.1 --port 3306 -u root -proot -e "SET GLOBAL collation_server = 'utf8mb4_unicode_ci'"

      - name: Install App
        working-directory: /home/runner/frappe-bench
        run: |
          bench get-app frappe_telegraf_ui $GITHUB_WORKSPACE
          bench setup requirements --dev
          # Install app dependencies in bench environment
          bench --site test_site execute frappe.utils.bench.install_requirements_txt --app frappe_telegraf_ui || true
          bench new-site --db-root-password root --admin-password admin test_site
          bench --site test_site install-app frappe_telegraf_ui
        env:
          CI: 'Yes'

      - name: Build Assets
        working-directory: /home/runner/frappe-bench
        run: |
          bench build --app frappe_telegraf_ui
        env:
          CI: 'Yes'

      - name: Run Tests
        working-directory: /home/runner/frappe-bench
        run: |
          bench --site test_site set-config allow_tests true
          bench --site test_site run-tests --app frappe_telegraf_ui --coverage
        env:
          TYPE: server

      - name: Upload Coverage Reports
        if: success()
        uses: codecov/codecov-action@v3
        with:
          file: /home/runner/frappe-bench/sites/test_site/coverage.xml
          fail_ci_if_error: false